Starting functional tests...
Testing HashTable...
Get(2) succeeded, value: Two
Update succeeded, new value of Get(2): Second
Remove succeeded, key 3 is no longer in the HashTable.
Iterating over HashTable:
Key: 1, Value: One
Key: 2, Value: Second
Testing BTree...
Get(2) succeeded, value: Two
Update succeeded, new value of Get(2): Second
Remove succeeded, key 3 is no longer in the BTree.
Iterating over BTree:
Key: 1, Value: One
Key: 2, Value: Second
Testing SparseVector with HashTable...
GetElement(2) succeeded, value: 3.5
Map succeeded, new value of GetElement(2): 7
Reduce succeeded, sum: 4.6
Extended Testing SparseVector with HashTable...
Element at index 0: 2
Element at index 1: 0
Element at index 2: 7
Element at index 3: 3.3
Element at index 4: -4.4
Element at index 5: 5.5
Element at index 6: 0
Element at index 7: 7.7
Element at index 8: 0
Element at index 9: 9.9
Map succeeded, new value of GetElement(5): -5.5
Reduce result (sum): -31
SparseVector elements after Map:
Index: 0, Value: -2
Index: 2, Value: -7
Index: 3, Value: -3.3
Index: 4, Value: 4.4
Index: 5, Value: -5.5
Index: 7, Value: -7.7
Index: 9, Value: -9.9
RemoveElement succeeded, element at index 5 is now zero.
Testing SparseVector with BTree...
GetElement(2) succeeded, value: 3.5
Map succeeded, new value of GetElement(2): 7
Reduce succeeded, sum: 4.6
Extended Testing SparseVector with BTree...
Element at index 0: 2
Element at index 1: 0
Element at index 2: 7
Element at index 3: 3.3
Element at index 4: -4.4
Element at index 5: 5.5
Element at index 6: 0
Element at index 7: 7.7
Element at index 8: 0
Element at index 9: 9.9
Map succeeded, new value of GetElement(5): -5.5
Reduce result (sum): -31
SparseVector elements after Map:
Index: 0, Value: -2
Index: 2, Value: -7
Index: 3, Value: -3.3
Index: 4, Value: 4.4
Index: 5, Value: -5.5
Index: 7, Value: -7.7
Index: 9, Value: -9.9
RemoveElement succeeded, element at index 5 is now zero.
Testing SparseMatrix with HashTable...
Map succeeded, new value of GetElement(1,1): 3
Reduce succeeded, sum: 9
Extended Testing SparseMatrix with HashTable...
Element at (0, 0): 2
Element at (0, 1): 0
Element at (0, 2): 0
Element at (0, 3): 5
Element at (1, 0): 0
Element at (1, 1): 3
Element at (1, 2): 0
Element at (1, 3): 0
Element at (2, 0): 0
Element at (2, 1): 0
Element at (2, 2): 4
Element at (2, 3): 0
Element at (3, 0): 6
Element at (3, 1): 0
Element at (3, 2): 0
Element at (3, 3): 4
Map succeeded, new value of GetElement(2,2): 14
Reduce result (sum): 84
SparseMatrix elements after Map:
Position: (0, 0), Value: 12
Position: (1, 1), Value: 13
Position: (2, 2), Value: 14
Position: (3, 0), Value: 16
Position: (3, 3), Value: 14
Position: (0, 3), Value: 15
RemoveElement succeeded, element at (1,1) is now zero.
Testing SparseMatrix with BTree...
Map succeeded, new value of GetElement(1,1): 3
Reduce succeeded, sum: 9
Extended Testing SparseMatrix with BTree...
Element at (0, 0): 2
Element at (0, 1): 0
Element at (0, 2): 0
Element at (0, 3): 5
Element at (1, 0): 0
Element at (1, 1): 3
Element at (1, 2): 0
Element at (1, 3): 0
Element at (2, 0): 0
Element at (2, 1): 0
Element at (2, 2): 4
Element at (2, 3): 0
Element at (3, 0): 6
Element at (3, 1): 0
Element at (3, 2): 0
Element at (3, 3): 4
Map succeeded, new value of GetElement(2,2): 14
Reduce result (sum): 84
SparseMatrix elements after Map:
Position: (0, 0), Value: 12
Position: (0, 3), Value: 15
Position: (1, 1), Value: 13
Position: (2, 2), Value: 14
Position: (3, 0), Value: 16
Position: (3, 3), Value: 14
RemoveElement succeeded, element at (1,1) is now zero.
All functional tests completed successfully.
Functional tests completed.

Starting performance tests...

Testing with data size: 50000

Testing with data size: 100000
Performance tests completed. Results saved in performance_results.csv
Performance tests completed.
